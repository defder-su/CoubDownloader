# This is an example configuration file for CoubDownloader.
# To use a custom config, place a file called 'coub.conf' in the same location as the script.
#
# Lines starting with '#' are treated as comments.
#
# True, False and None (case-sensitive) will be converted to Python keywords.
# On their own they do NOT count as strings (important for paths and other string-only options).



# Verbosity of the command line output
#   0 -> quiet mode (only errors/warnings/prompts)
#   1 -> normal verbosity
# Allowed values: 0, 1
VERBOSITY = 1

# How to answer overwrite prompts
#   yes -> always answer yes
#   no  -> always answer no
# Allowed values:
#   coub.py:     no restrictions (everything but yes/no will lead to a prompt)
#   coub-gui.py: yes, no         (everything but yes/no will lead to no)
PROMPT = prompt

# Default download destination (will be created if it doesn't exist)
# ~ and ~user do NOT get expanded and will be treated literally
# Allowed values:
#   coub.py:     absolute/relative paths
#   coub-gui.py: absolute paths (relative paths will lead to fallback path)
PATH = .

# Whether to keep the individual video/audio streams after merging
# Allowed values: True, False
KEEP = False

# How often to loop the video
# Max. duration is still limited by the audio
# Allowed values: integers >0
REPEAT = 1000

# Limit duration (FFmpeg syntax)
# https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax
# Between REPEAT and DUR the shorter option will decide the length
# Allowed values: FFmpeg time syntax, None (to disable)
DURATION = None

# Max. number of connections to use
# High values can speed up downloads, but also increase the risk of being throttled or disconnected
# More connections only make sense, if your download speed isn't fully utilized yet
# Allowed values: integers >0
CONNECTIONS = 25

# How often to reestablish the connection to Coub if it is lost
#  >0 -> retry the specified number of times
#   0 -> don't retry
#  <0 -> retry indefinitely
# Allowed values: integers
RETRIES = 5

# Limit how many links to parse during one script invocation
#  >0 -> limit to the specified amount
#   0 -> no limit
# Allowed values: integers >0, None (to disable)
MAX_COUBS = None

# What video/audio quality to download from the range of available streams
#   0 -> worst quality
#  -1 -> best quality
# Allowed values: 0, -1
V_QUALITY = -1
A_QUALITY = -1

# Limit the range of video streams to choose from
#   med    ->  ~640px width
#   high   -> ~1280px width
#   higher -> ~1600px width
# Allowed values: med, high, higher
V_MAX = higher
V_MIN = med

# How much to prefer AAC audio
#   0 -> never download AAC audio
#   1 -> rank it between low and high quality MP3
#   2 -> prefer AAC, use MP3 fallback
#   3 -> either AAC or no audio
# Allowed values: 0, 1, 2, 3
AAC = 1

# Download 'shared' video (includes audio) instead of merging separate streams
# This provides the same videos as Coub's own 'Download' button
# Allowed values: True, False
SHARE = False

# How to treat recoubs during channel downloads
#   0 -> don't download recoubs
#   1 -> download recoubs
#   2 -> only download recoubs
# Allowed values: 0, 1, 2
RECOUBS = 1

# Call a program (i.e. media player) to display downloaded coubs as soon as they are ready
# Keyboard shortcuts may not work for CLI audio players
# Allowed values: invokable command, None (to disable)
PREVIEW = None

# Only download video or audio streams
# These options are mutually exclusive (i.e. both mustn't be True at the same time)
# Allowed values: True, False
A_ONLY = False
V_ONLY = False

# Write parsed links to the specified file and exit (don't download coubs)
# How to open the file can be set with WRITE_METHOD (see further below)
# Allowed values: absolute paths, None (to disable)
OUTPUT_LIST = None

# How to write parsed links to a file (see OUT_FILE)
#   w -> overwrite OUT_FILE
#   a -> append to OUT_FILE
WRITE_METHOD = w

# Use an archive file to keep track of downloaded coubs
# Allowed values: absolute/relative paths, None (to disable)
ARCHIVE = None

# Container to merge separate video/audio streams into
# Allowed values: mkv, mp4, asf, avi, flv, f4v, mov
MERGE_EXT = mkv

# Output name formatting
# Supports the following special keywords:
#   %id%        - coub ID (identifier in the URL)
#   %title%     - coub title
#   %creation%  - creation date/time
#   %community% - coub community
#   %channel%   - channel title
#   %tags%      - all tags (separated by TAG_SEP, see below)
# All other strings are interpreted literally.
# Setting a custom value increases skip duration for existing coubs (usage of an archive file is recommended)
# Allowed values: strings, None (same as %id%)
NAME_TEMPLATE = %id%

# Custom path or command to invoke FFmpeg
# Paths must be absolute
FFMPEG_PATH = ffmpeg

# Character or string to separate tags in the output filename
# Allowed values: strings, space (to separate with whitespace)
TAG_SEP = _

# Character to replace forbidden characters in the filename (newlines, tabs, /, \, etc.)
# Allowed values: strings, space (to replace with whitespace), None (to only remove)
FALLBACK_CHAR = -
